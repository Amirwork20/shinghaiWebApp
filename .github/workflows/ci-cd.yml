name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Change this to your default branch
  pull_request:
    branches:
      - main # Change this to your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14" # Specify the Node.js version

      - name: Install dependencies
        run: npm install

  deploy:
    runs-on: ubuntu-latest
    needs: build # Ensure the build job completes successfully

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14" # Specify the Node.js version

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # Add your SSH key to GitHub secrets
          HOST: ${{ secrets.HOST }} # Add your server's host to GitHub secrets
          USER: ${{ secrets.USER }} # Add your server's user to GitHub secrets
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key $USER@$HOST << 'EOF'
            # Navigate to the project directory
            cd /var/www/osama.shinghai.com.pk || exit 1

            # root user
            sudo su
            
            # Pull the latest code from the repository
            git pull origin main  # Change 'main' to your default branch if different
            
            # Check if package.json has changed
            if [ -n "$(git diff HEAD^ HEAD -- package.json)" ]; then
              echo "---Changes detected in package.json, reinstalling dependencies----"
              rm -rf node_modules  # Remove old node_modules
              npm install  # Install fresh dependencies
            else
              echo "---No changes in package.json, skipping dependency reinstallation---"
            fi
            
            # Rebuild this react application
            NODE_OPTIONS="--max_old_space_size=2048" npm run build || exit 1 

            #exit root user
            echo exitRootUser
          EOF
